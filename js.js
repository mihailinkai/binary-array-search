//BINARY ARRAY SEARCH

/* Чтобы реализовать бинарный поиск элемента в массиве:
!Сперва нужно отсортировать список!
Затем можно приступать к поиску:
Ход мыслей такой, что сначала искомое значение нужно сравнить 
со средним элементом списка, 
если они равны - ура, значение найдено!
Если значение > среднего элемента - искать в верхней половине спика;
Если значение < среднего элемента - искать в нижней половине списка.
Список нужно делить пополам до тех пор, пока не найдется нужное нам значение 
или пока не останется элементов для поиска.

  Реализация:
Создаем функцию binarySearch,
Она будет принимать значения, которое мы будем искать в массиве
Функция вернет позицию элемента в списке
если элемент удастся найти.
Если элемент не будет найден, возвращается 'NO'. 
Вот что получилось:
*/

var myArray = [1, 8, 4, 9, 100, 50, 6]; //мы будем искать эл-ты в этом массиве
var element = ['2'];  //эл-т, который мы хотим найти


//сортируем
myArray.sort(function(a,b)   {     /* когда a меньше, чем b, 
возвращается негативное значение, 
и меньший элемент становится левее большего - порядок по возрастанию.*/
	return a - b;
});

console.log('myArray,',myArray);

//алгоритм поиска

function binarySearch(element, myArray) {  

let first = 0;     //  первая позиция в массиве
	let last = myArray.length - 1;    //последняя позиция в массиве
let position = 'NO';
	let found = false;
	let middle;
	
	
	while (found === false && first <= last {
		   middle = Math.floor((first + last) / 2);    /* для поиска среднего элемента; 
		   (Math.floor() – округляет значение до ближайшего меньшего целого числа.) */
	
	if (myArray(middle) == element) {
		found = true;
		position = middle; 
	} else if (myArray[middle] > element ) 
	last = middle - 1;     // в нижней части
} else {       
	first = middle + 1;
}   
	}
		  return position; 
		   }

		//тест. попробуй
var res = linearSearch(element, myArray);
alert (res);
   
		   